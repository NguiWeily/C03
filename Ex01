Files to turn in : ft_strncmp.c
Allowed functions : None

• Reproduce the behavior of the function strncmp (man strncmp).
• Here’s how it should be prototyped :
int ft_strncmp(char *s1, char *s2, unsigned int n);

Certainly! Here's an implementation of the `ft_strncmp` function that reproduces the behavior of the `strncmp` function:

```c
int ft_strncmp(char *s1, char *s2, unsigned int n)
{
    while (n > 0 && *s1 && (*s1 == *s2))
    {
        s1++;
        s2++;
        n--;
    }

    if (n == 0)
        return 0;

    return (int)(*s1 - *s2);
}
```

In this implementation, the `ft_strncmp` function takes three parameters: `s1` and `s2`, which are pointers to the null-terminated strings to be compared, and `n`, which is the maximum number of characters to compare.

The function uses a while loop to iterate through the strings character by character. It compares each character of `s1` with the corresponding character of `s2`. The loop continues as long as there are characters left in both strings, `n` is greater than 0, and the characters are equal.

If the characters are equal, the loop moves to the next characters by incrementing the pointers `s1` and `s2`, and decrementing `n`. If the characters are not equal, the function returns the difference between the ASCII values of the characters.

After the loop, if `n` is equal to 0, it means that the maximum number of characters to compare has been reached, and the function returns 0. If `n` is greater than 0 and the strings differ, the function returns a positive value if the character in `s1` is greater, and a negative value if the character in `s2` is greater.

Please note that this implementation assumes that the input strings are null-terminated and that `n` is not greater than the length of the shortest string.
