Chapter IV
Exercise 01 : ft_strncmp
Exercise 01
ft_strncmp
Turn-in directory : ex01/
Files to turn in : ft_strncmp.c
Allowed functions : None
• Reproduce the behavior of the function strncmp (man strncmp).
• Here’s how it should be prototyped :
int
ft_strncmp(char *s1, char *s2, unsigned int n);
and create main test code and comply norminette and don't use "for" and function as short as possible
Here's a possible implementation of the `ft_strncmp` function:

```c
int ft_strncmp(char *s1, char *s2, unsigned int n)
{
    while (n > 0 && (*s1 == *s2))
    {
        if (*s1 == '\0')
            return 0; // Both strings are equal

        s1++;
        s2++;
        n--;
    }

    if (n == 0)
        return 0; // Reached the end of the comparison

    return (*s1 - *s2); // Difference in characters
}
```

In this implementation, the function compares the characters of `s1` and `s2` until one of the following conditions is met:

1. `n` becomes zero: This condition checks if we have compared `n` characters already. If `n` is zero, it means we have reached the end of the comparison and the strings are equal.

2. Characters are not equal: If the characters at the current position `*s1` and `*s2` are not equal, we return the difference between them. This difference could be positive, negative, or zero, depending on the ASCII values of the characters.

The main test code can be written as follows:

```c
#include <stdio.h>

int main()
{
    char str1[] = "Hello";
    char str2[] = "Hell";
    unsigned int n = 5;

    int result = ft_strncmp(str1, str2, n);

    printf("Comparison result: %d\n", result);

    return 0;
}
```

This code compares the first `n` characters of `str1` and `str2` using `ft_strncmp` and prints the result of the comparison.
